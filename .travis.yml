# This Travis job script has been generated by a script via
#
#   haskell-ci '--output=.travis.yml' '--config=cabal.haskell-ci' 'haskell-ci.cabal'
#
# For more information, see https://github.com/haskell-CI/haskell-ci
#
# version: 0.1.0.0
#
language: c
dist: xenial

git:
  submodules: false  # whether to recursively clone submodules

branches:
  only:
    - master

cache:
  directories:
    - $HOME/.cabal/packages
    - $HOME/.cabal/store
    - $HOME/.ghc-install

before_cache:
  - rm -fv $CABALHOME/packages/hackage.haskell.org/build-reports.log
  # remove files that are regenerated by 'cabal update'
  - rm -fv $CABALHOME/packages/hackage.haskell.org/00-index.*
  - rm -fv $CABALHOME/packages/hackage.haskell.org/*.json
  - rm -fv $CABALHOME/packages/hackage.haskell.org/01-index.cache
  - rm -fv $CABALHOME/packages/hackage.haskell.org/01-index.tar
  - rm -fv $CABALHOME/packages/hackage.haskell.org/01-index.tar.idx

  - rm -rfv $CABALHOME/packages/head.hackage

matrix:
  include:
    - compiler: "ghc-8.6.3"
      addons: {apt: {packages: [ghc-ppa-tools,cabal-install-2.4,ghc-8.6.3], sources: [hvr-ghc]}}
    - compiler: "ghc-8.4.4"
      addons: {apt: {packages: [ghc-ppa-tools,cabal-install-2.4,ghc-8.4.4], sources: [hvr-ghc]}}
    - compiler: "ghc-8.2.2"
      addons: {apt: {packages: [ghc-ppa-tools,cabal-install-2.4,ghc-8.2.2], sources: [hvr-ghc]}}
    - compiler: "ghc-8.0.2"
      addons: {apt: {packages: [ghc-ppa-tools,cabal-install-2.4,ghc-8.0.2], sources: [hvr-ghc]}}
    - compiler: "ghc-head"
      env: GHCHEAD=true
      addons: {apt: {packages: [ghc-ppa-tools,cabal-install-head,ghc-head], sources: [hvr-ghc]}}
    - compiler: "ghc-8.4.4"
      addons: {apt: {packages: [ghc-ppa-tools,cabal-install-2.4,ghc-8.4.4], sources: [hvr-ghc]}}
      os: osx

  allow_failures:
    - compiler: "ghc-head"

before_install:
  - HC=/opt/ghc/bin/${CC}
  - HCPKG=${HC/ghc/ghc-pkg}
  - unset CC
  - CABAL=/opt/ghc/bin/cabal
  - CABALHOME=$HOME/.cabal
  - export PATH="$CABALHOME/bin:$PATH"
  - ROOTDIR=$(pwd)
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then brew update; brew upgrade python@3; curl https://haskell.futurice.com/haskell-on-macos.py | python3 - --make-dirs --install-dir=$HOME/.ghc-install --cabal-alias=head install cabal-install-head ${TRAVIS_COMPILER}; fi
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then HC=$HOME/.ghc-install/ghc/bin/$TRAVIS_COMPILER; HCPKG=${HC/ghc/ghc-pkg}; CABAL=$HOME/.ghc-install/ghc/bin/cabal; fi
  - HCNUMVER=$(( $(${HC} --numeric-version|sed -E 's/([0-9]+)\.([0-9]+)\.([0-9]+).*/\1 * 10000 + \2 * 100 + \3/') ))
  - echo $HCNUMVER

install:
  - ${CABAL} --version
  - echo "$(${HC} --version) [$(${HC} --print-project-git-commit-id 2> /dev/null || echo '?')]"
  - TEST=--enable-tests
  - BENCH=--enable-benchmarks
  - GHCHEAD=${GHCHEAD-false}
  - travis_retry ${CABAL} update -v
  - sed -i.bak 's/^jobs:/-- jobs:/' $CABALHOME/config
  - rm -fv cabal.project cabal.project.local
  - "sed -i.bak 's/^-- jobs:.*/jobs: 2/' $CABALHOME/config"
  - "sed -i.bak 's/-- ghc-options:.*/ghc-options: -j2/' $CABALHOME/config"
  # Overlay Hackage Package Index for GHC HEAD: https://github.com/hvr/head.hackage
  - |
    if $GHCHEAD; then
      sed -i 's/-- allow-newer: .*/allow-newer: *:base/' $CABALHOME/config
      for pkg in $($HCPKG list --simple-output); do pkg=$(echo $pkg | sed 's/-[^-]*$//'); sed -i "s/allow-newer: /allow-newer: *:$pkg, /" $CABALHOME/config; done

      echo 'repository head.hackage'                                                        >> $CABALHOME/config
      echo '   url: http://head.hackage.haskell.org/'                                       >> $CABALHOME/config
      echo '   secure: True'                                                                >> $CABALHOME/config
      echo '   root-keys: 07c59cb65787dedfaef5bd5f987ceb5f7e5ebf88b904bbd4c5cbdeb2ff71b740' >> $CABALHOME/config
      echo '              2e8555dde16ebd8df076f1a8ef13b8f14c66bad8eafefd7d9e37d0ed711821fb' >> $CABALHOME/config
      echo '              8f79fd2389ab2967354407ec852cbe73f2e8635793ac446d09461ffb99527f6e' >> $CABALHOME/config
      echo '   key-threshold: 3'                                                            >> $CABALHOME.config

      grep -Ev -- '^\s*--' $CABALHOME/config | grep -Ev '^\s*$'

      ${CABAL} new-update head.hackage -v
    fi
  - grep -Ev -- '^\s*--' $CABALHOME/config | grep -Ev '^\s*$'
  - ${CABAL} new-install -w ${HC} -j2 doctest --constraint='doctest ==0.16.*'
  - if [ $HCNUMVER -eq 80603 ] ; then ${CABAL} new-install -w ${HC} -j2 hlint --constraint='hlint ==2.1.*' ; fi
  - rm -f cabal.project
  - touch cabal.project
  - "printf 'packages: \".\"\\n' >> cabal.project"
  - echo 'package haskell-ci' >> cabal.project
  - "echo '  ghc-options: -Werror' >> cabal.project"
  - "printf 'write-ghc-environment-files: always\\n' >> cabal.project"
  - "echo 'keep-going: False' >> cabal.project"
  - echo 'package bytestring' >> cabal.project
  - "echo '  tests: False' >> cabal.project"
  - touch cabal.project.local
  - "for pkg in $($HCPKG list --simple-output); do echo $pkg | sed 's/-[^-]*$//' | grep -vE -- '^(Cabal|haskell-ci)$' | sed 's/^/constraints: /' | sed 's/$/ installed/' >> cabal.project.local; done"
  - cat cabal.project || true
  - cat cabal.project.local || true
  - if [ -f "./configure.ac" ]; then (cd "." && autoreconf -i); fi
  - rm -f cabal.project.freeze
  - ${CABAL} new-freeze -w ${HC} ${TEST} ${BENCH} --project-file="cabal.project" --dry
  - "cat \"cabal.project.freeze\" | sed -E 's/^(constraints: *| *)//' | sed 's/any.//'"
  - rm  "cabal.project.freeze"
  - ${CABAL} new-build -w ${HC} ${TEST} ${BENCH} --project-file="cabal.project" --dep -j2 all
  - ${CABAL} new-build -w ${HC} --disable-tests --disable-benchmarks --project-file="cabal.project" --dep -j2 all
  - rm -rf .ghc.environment.* "."/dist
  - DISTDIR=$(mktemp -d /tmp/dist-test.XXXX)

# Here starts the actual work to be performed for the package under test;
# any command which exits with a non-zero exit code causes the build to fail.
script:
  # test that source-distributions can be generated
  - ${CABAL} new-sdist all
  - mv dist-newstyle/sdist/*.tar.gz ${DISTDIR}/
  - cd ${DISTDIR} || false
  - find . -maxdepth 1 -name '*.tar.gz' -exec tar -xvf '{}' \;
  - rm -f cabal.project
  - touch cabal.project
  - "printf 'packages: \"haskell-ci-*/*.cabal\"\\n' >> cabal.project"
  - echo 'package haskell-ci' >> cabal.project
  - "echo '  ghc-options: -Werror' >> cabal.project"
  - "printf 'write-ghc-environment-files: always\\n' >> cabal.project"
  - "echo 'keep-going: False' >> cabal.project"
  - echo 'package bytestring' >> cabal.project
  - "echo '  tests: False' >> cabal.project"
  - touch cabal.project.local
  - "for pkg in $($HCPKG list --simple-output); do echo $pkg | sed 's/-[^-]*$//' | grep -vE -- '^(Cabal|haskell-ci)$' | sed 's/^/constraints: /' | sed 's/$/ installed/' >> cabal.project.local; done"
  - cat cabal.project || true
  - cat cabal.project.local || true
  # this builds all libraries and executables (without tests/benchmarks)
  - ${CABAL} new-build -w ${HC} --disable-tests --disable-benchmarks all

  # build & run tests, build benchmarks
  - ${CABAL} new-build -w ${HC} ${TEST} ${BENCH} all
  - if [ "x$TEST" = "x--enable-tests" ]; then ${CABAL} new-test -w ${HC} ${TEST} ${BENCH} all; fi

  # doctest
  - (cd haskell-ci-* && doctest --fast -XDeriveFoldable -XDeriveFunctor -XDeriveGeneric -XDeriveTraversable src)

  # hlint
  - if [ $HCNUMVER -eq 80603 ] ; then (cd haskell-ci-* && hlint -h ${ROOTDIR}/.hlint.yaml -XDeriveFoldable -XDeriveFunctor -XDeriveGeneric -XDeriveTraversable src) ; fi
  - if [ $HCNUMVER -eq 80603 ] ; then (cd haskell-ci-* && hlint -h ${ROOTDIR}/.hlint.yaml cli) ; fi

  # cabal check
  - (cd haskell-ci-* && ${CABAL} check)

  # haddock
  - ${CABAL} new-haddock -w ${HC} ${TEST} ${BENCH} all

  # Build without installed constraints for packages in global-db
  - rm -f cabal.project.local; ${CABAL} new-build -w ${HC} --disable-tests --disable-benchmarks all;

  # Constraint sets
  - rm -rf cabal.project.local

  # Constraint set deepseq-1.4
  - echo Constraint set deepseq-1.4 && echo -en 'travis_fold:start:constraint-sets-deepseq-1.4\\r'
  - if [ $HCNUMVER -ge 70800 ] && [ $HCNUMVER -lt 71000 ]  ||  [ $HCNUMVER -eq 80202 ] ; then ${CABAL} new-build -w ${HC} --disable-tests --disable-benchmarks  --constraint='deepseq ==1.4.*' all ; fi

  - echo -en 'travis_fold:end:constraint-sets-deepseq-1.4\\r'

# REGENDATA ["--output=.travis.yml","--config=cabal.haskell-ci","haskell-ci.cabal"]
# EOF
