# This Travis job script has been generated by a script via
#
#   runghc make_travis_yml_2.hs '-o' '.travis.yml' '--config=cabal.make-travis-yml' 'make-travis-yml.cabal'
#
# For more information, see https://github.com/hvr/multi-ghc-travis
#
language: c
sudo: false

git:
  submodules: false  # whether to recursively clone submodules

branches:
  only:
    - master

cache:
  directories:
    - $HOME/.cabal/packages
    - $HOME/.cabal/store

before_cache:
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/build-reports.log
  # remove files that are regenerated by 'cabal update'
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/00-index.*
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/*.json
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/01-index.cache
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/01-index.tar
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/01-index.tar.idx

  - rm -fv $HOME/.cabal/packages/head.hackage

matrix:
  include:
    - compiler: "ghc-7.8.4"
    # env: TEST=--disable-tests BENCH=--disable-benchmarks
      addons: {apt: {packages: [ghc-ppa-tools,cabal-install-head,ghc-7.8.4], sources: [hvr-ghc]}}
    - compiler: "ghc-7.10.3"
    # env: TEST=--disable-tests BENCH=--disable-benchmarks
      addons: {apt: {packages: [ghc-ppa-tools,cabal-install-head,ghc-7.10.3], sources: [hvr-ghc]}}
    - compiler: "ghc-8.0.2"
    # env: TEST=--disable-tests BENCH=--disable-benchmarks
      addons: {apt: {packages: [ghc-ppa-tools,cabal-install-head,ghc-8.0.2], sources: [hvr-ghc]}}
    - compiler: "ghc-8.2.2"
    # env: TEST=--disable-tests BENCH=--disable-benchmarks
      addons: {apt: {packages: [ghc-ppa-tools,cabal-install-head,ghc-8.2.2], sources: [hvr-ghc]}}
    - compiler: "ghc-8.4.1"
      env: GHCHEAD=true
      addons: {apt: {packages: [ghc-ppa-tools,cabal-install-head,ghc-8.4.1], sources: [hvr-ghc]}}

  allow_failures:
    - compiler: "ghc-8.4.1"

before_install:
  - HC=${CC}
  - HCPKG=${HC/ghc/ghc-pkg}
  - unset CC
  - ROOTDIR=$(pwd)
  - mkdir -p $HOME/.local/bin
  - "PATH=/opt/ghc/bin:/opt/ghc-ppa-tools/bin:$HOME/local/bin:$PATH"
  - HCNUMVER=$(( $(${HC} --numeric-version|sed -E 's/([0-9]+)\.([0-9]+)\.([0-9]+).*/\1 * 10000 + \2 * 100 + \3/') ))
  - echo $HCNUMVER

install:
  - cabal --version
  - echo "$(${HC} --version) [$(${HC} --print-project-git-commit-id 2> /dev/null || echo '?')]"
  - BENCH=${BENCH---enable-benchmarks}
  - TEST=${TEST---enable-tests}
  - HADDOCK=${HADDOCK-true}
  - INSTALLED=${INSTALLED-true}
  - GHCHEAD=${GHCHEAD-false}
  - travis_retry cabal update -v
  - "sed -i.bak 's/^jobs:/-- jobs:/' ${HOME}/.cabal/config"
  - rm -fv cabal.project cabal.project.local
  - "sed -i.bak 's/^-- jobs:.*/jobs: 2/' ${HOME}/.cabal/config"
  - "if [ $HCNUMVER -ge 70800 ]; then sed -i.bak 's/-- ghc-options:.*/ghc-options: -j2/' ${HOME}/.cabal/config; fi"
  # Overlay Hackage Package Index for GHC HEAD: https://github.com/hvr/head.hackage
  - |
    if $GHCHEAD; then
      sed -i.bak 's/-- allow-newer:.*/allow-newer: *:base, *:template-haskell, *:ghc, *:Cabal/' ${HOME}/.cabal/config

      echo 'repository head.hackage'                                                        >> ${HOME}/.cabal/config
      echo '   url: http://head.hackage.haskell.org/'                                       >> ${HOME}/.cabal/config
      echo '   secure: True'                                                                >> ${HOME}/.cabal/config
      echo '   root-keys: 07c59cb65787dedfaef5bd5f987ceb5f7e5ebf88b904bbd4c5cbdeb2ff71b740' >> ${HOME}/.cabal/config
      echo '              2e8555dde16ebd8df076f1a8ef13b8f14c66bad8eafefd7d9e37d0ed711821fb' >> ${HOME}/.cabal/config
      echo '              8f79fd2389ab2967354407ec852cbe73f2e8635793ac446d09461ffb99527f6e' >> ${HOME}/.cabal/config
      echo '   key-threshold: 3'                                                            >> ${HOME}/.cabal.config

      cabal new-update head.hackage -v
    fi
  - grep -Ev -- '^\s*--' ${HOME}/.cabal/config | grep -Ev '^\s*$'
  - if [ $HCNUMVER -ge 80000 ]; then cabal new-install -w ${HC} --symlink-bindir=$HOME/.local/bin doctest --constraint='doctest ==0.13.*'; fi
  - if [ $HCNUMVER -eq 80202 ]; then cabal new-install -w ${HC} --symlink-bindir=$HOME/.local/bin hlint --constraint='hlint ==2.0.*'; fi
  - "printf 'packages: \".\"\\n' > cabal.project"
  - echo 'package make-travis-yml' >> cabal.project
  - "echo '  ghc-options: -Werror' >> cabal.project"
  - cat cabal.project
  - if [ -f "./configure.ac" ]; then
      (cd "." && autoreconf -i);
    fi
  - rm -f cabal.project.freeze
  - cabal new-build -w ${HC} ${TEST} ${BENCH} --project-file="cabal.project" --dep -j2 all
  - cabal new-build -w ${HC} --disable-tests --disable-benchmarks --project-file="cabal.project" --dep -j2 all
  - rm -rf "."/.ghc.environment.* "."/dist
  - DISTDIR=$(mktemp -d /tmp/dist-test.XXXX)

# Here starts the actual work to be performed for the package under test;
# any command which exits with a non-zero exit code causes the build to fail.
script:
  # test that source-distributions can be generated
  - (cd "." && cabal sdist)
  - mv "."/dist/make-travis-yml-*.tar.gz ${DISTDIR}/
  - cd ${DISTDIR} || false
  - find . -maxdepth 1 -name '*.tar.gz' -exec tar -xvf '{}' \;
  - "printf 'packages: make-travis-yml-*/*.cabal\\n' > cabal.project"
  - echo 'package make-travis-yml' >> cabal.project
  - "echo '  ghc-options: -Werror' >> cabal.project"
  - cat cabal.project
  # this builds all libraries and executables (without tests/benchmarks)
  - cabal new-build -w ${HC} --disable-tests --disable-benchmarks all

  # Build with installed constraints for packages in global-db
  - if $INSTALLED; then echo cabal new-build -w ${HC} --disable-tests --disable-benchmarks $(${HCPKG} list --global --simple-output --names-only | sed 's/\([a-zA-Z0-9-]\{1,\}\) */--constraint="\1 installed" /g') all | sh; else echo "Not building with installed constraints"; fi

  # build & run tests, build benchmarks
  - cabal new-build -w ${HC} ${TEST} ${BENCH} all
  - if [ "x$TEST" = "x--enable-tests" ]; then cabal new-test -w ${HC} ${TEST} ${BENCH} all; fi

  # doctest
  - if [ $HCNUMVER -ge 80000 ]; then (cd make-travis-yml-* && doctest --fast src); fi

  # hlint
  - if [ $HCNUMVER -eq 80202 ]; then (cd make-travis-yml-* && hlint -h ${ROOTDIR}/.hlint.yaml src); fi

  # cabal check
  - (cd make-travis-yml-* && cabal check)

  # haddock
  - rm -rf ./dist-newstyle
  - if $HADDOCK; then cabal new-haddock -w ${HC} ${TEST} ${BENCH} all; else echo "Skipping haddock generation";fi

  - echo Constraint set deepseq-1.4 && echo -en 'travis_fold:start:constraint-sets-deepseq-1.4\\r'
  - if [ $HCNUMVER -ge 70800 ] && [ $HCNUMVER -lt 71000 ]  ||  [ $HCNUMVER -eq 80202 ]; then cabal new-build -w ${HC} --disable-tests --disable-benchmarks --constraint='deepseq ==1.4.*' all; else echo skipping...; fi

  - echo -en 'travis_fold:end:constraint-sets-deepseq-1.4\\r'
# REGENDATA ["-o",".travis.yml","--config=cabal.make-travis-yml","make-travis-yml.cabal"]
# EOF
